cmake_minimum_required(VERSION 3.16) # 3.16 is needed for target_precompile_headers

set(CORE_TARGET ${PROJECT_NAME}_Core)

# This .cmake includes and defines the ${PROJECT_NAME}_SOURCES variable !
# It is generated by the generate_cmake_sources script.
include(CMake/CMakeLists_sources.cmake)

# Build a Monocle Library and setup boilerplate Monocle target configurations (warning level, LTCG etc.)
monocle_add_library(${MONOCLE_LIB_TYPE} ${CORE_TARGET} "${${CORE_TARGET}_SOURCES}")
monocle_target_compile_config(${CORE_TARGET})

# Create the source groups for source tree with root at CMAKE_CURRENT_SOURCE_DIR
# to recreate the folder tree with filters within Visual Studio for example.
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${${CORE_TARGET}_SOURCES})

# Core external dependencies

set(RAPIDJSON_ROOT "Unknown" CACHE PATH "Folder where the RapidJSON library can be found" )
monocle_find_header_only_library_package(${CORE_TARGET} "RapidJSON")

set(VENDOR_DIR ${PROJECT_SOURCE_DIR}/vendor/)

# We use BetterEnums folder which is directly in the vendor directory, so use vendor as an include directory.
target_include_directories(${CORE_TARGET} PUBLIC .. ${VENDOR_DIR})

target_link_libraries(${CORE_TARGET} PRIVATE ${PROJECT_NAME})  # Linking with project's Interface Library allows us to reuse PCH's.

