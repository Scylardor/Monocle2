cmake_minimum_required(VERSION 3.16) # 3.16 is needed for target_precompile_headers

set(GAMEFRAMEWORK_TARGET ${PROJECT_NAME}_GameFramework)
set(SOURCE_DIR .)

# This .cmake includes and defines the ${PROJECT_NAME}_SOURCES variable !
# It is generated by the generate_cmake_sources script.
include(CMake/CMakeLists_sources.cmake)

if(${PROJECT_NAME}_BUILD_SHARED_LIB)
	add_definitions(-DMOE_DLL_EXPORT)
	add_library(${GAMEFRAMEWORK_TARGET} SHARED ${${GAMEFRAMEWORK_TARGET}_SOURCES} )
else()
	add_library(${GAMEFRAMEWORK_TARGET} STATIC ${${GAMEFRAMEWORK_TARGET}_SOURCES} )
endif()

# Create the source groups for source tree with root at CMAKE_CURRENT_SOURCE_DIR
# to recreate the folder tree with filters within Visual Studio for example.
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${${GAMEFRAMEWORK_TARGET}_SOURCES})

# This library uses Core
target_link_libraries(${GAMEFRAMEWORK_TARGET}
	PUBLIC ${PROJECT_NAME}_Core
	PRIVATE ${PROJECT_NAME})  # Linking with project's Interface Library allows us to reuse PCH's.